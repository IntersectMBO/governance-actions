{
  "@context": {
    "@language": "en",
    "CIP100": "https://github.com/cardano-foundation/CIPs/blob/master/CIP-0100/README.md#",
    "CIP108": "https://github.com/cardano-foundation/CIPs/blob/master/CIP-0108/README.md#",
    "intersectSpec": "https://github.com/IntersectMBO/governance-actions/blob/main/schemas/specification.md#",
    "hashAlgorithm": "CIP100:hashAlgorithm",
    "body": {
      "@id": "CIP108:body",
      "@context": {
        "references": {
          "@id": "CIP108:references",
          "@container": "@set",
          "@context": {
            "GovernanceMetadata": "CIP100:GovernanceMetadataReference",
            "Other": "CIP100:OtherReference",
            "label": "CIP100:reference-label",
            "uri": "CIP100:reference-uri",
            "referenceHash": {
              "@id": "CIP108:referenceHash",
              "@context": {
                "hashDigest": "CIP108:hashDigest",
                "hashAlgorithm": "CIP100:hashAlgorithm"
              }
            }
          }
        },
        "title": "CIP108:title",
        "abstract": "CIP108:abstract",
        "motivation": "CIP108:motivation",
        "rationale": "CIP108:rationale",
        "onChain": {
          "@id": "intersectSpec:onChain",
          "@context": {
            "governanceActionType": "intersectSpec:governanceActionType",
            "depositReturnAddress": "intersectSpec:depositReturnAddress",
            "withdrawals": {
              "@id": "intersectSpec:withdrawals",
              "@container": "@set",
              "@context": {
                "withdrawalAddress": "intersectSpec:withdrawalAddress",
                "withdrawalAmount": "intersectSpec:withdrawalAmount"
              }
            }
          }
        }
      }
    },
    "authors": {
      "@id": "CIP100:authors",
      "@container": "@set",
      "@context": {
        "name": "http://xmlns.com/foaf/0.1/name",
        "witness": {
          "@id": "CIP100:witness",
          "@context": {
            "witnessAlgorithm": "CIP100:witnessAlgorithm",
            "publicKey": "CIP100:publicKey",
            "signature": "CIP100:signature"
          }
        }
      }
    }
  },
  "authors": [
    {
      "name": "Intersect",
      "witness": {
        "witnessAlgorithm": "ed25519",
        "publicKey": "05568f86955e65c1a59df5ac1985449b167c3828dccd00b3da9df36a1cf1c743",
        "signature": "eb4dee9c9c8a765176e2d16a58e00d436a24825cf8097d6263486789183548ac8ce76e3e87acfd45269365ecf082fd10e63396ccb3e492dc9f3d2f5ea40d3b0b"
      }
    }
  ],
  "hashAlgorithm": "blake2b-256",
  "body": {
    "title": "Withdraw ₳314,800 for PyCardano administered by Intersect",
    "abstract": "This treasury withdrawal funds **PyCardano** which will provide the following services: ​\n\nPyCardano is a lightweight Python library that enables developers to interact seamlessly with the Cardano blockchain. It facilitates the creation and signing of transactions without reliance on external serialization tools, thereby simplifying the development process and broadening accessibility for Python developers. Given the dynamic nature of blockchain technology, particularly with Cardano's ongoing protocol upgrades and hard forks, it is imperative to maintain and update PyCardano to ensure continuous compatibility and functionality.​\n\nThis proposal aims to:\n\nEnsure Compatibility: Regularly update PyCardano to align with the latest Cardano ledger rules and protocol changes, including upcoming hard forks in 2025.​\n\nEnhance Reliability: Promptly identify and resolve bugs within PyCardano to maintain a robust and dependable library for developers for 12 months since the proposal is funded.​\n\nFoster Community Engagement: Collaborate with the Cardano developer community to gather feedback, address issues, and implement improvements effectively.\n\nThis Treasury Withdrawal is submitted by Intersect on behalf of the vendor. The following sections; Abstract, Motivation, Rationale and Vendor Profile have been sourced from the approved proposal submitted by the Vendor as part of the Intersect budget process.\n\nThis treasury withdrawal funds one of 39 proposals to give effect to the approved budget info action for ₳275,269,340, administered by Intersect via gov_action1u9x73kwufaxa70lfy59g4ynwyrcsaxdcd0gxzzmh67s9fxq4j8hqqk2phgh. The information provided herein is intended to fulfill the spirit of the constitutional requirement for a treasury withdrawal info action by also providing the details of the proposed solution, alignment to the budget, and amount to be withdrawn from the Cardano Treasury.",
    "motivation": "This proposal aims to solve the following problem:\n\nThe Cardano ecosystem primarily offers development tools and libraries in Haskell and JavaScript, creating a significant barrier for Python developers who wish to engage with the platform. This limitation hinders the growth and diversification of the developer community within the Cardano ecosystem. Furthermore, existing tools often depend on external serialization libraries, complicating the development process and potentially introducing additional points of failure. The absence of a native Python library that seamlessly integrates with Cardano's infrastructure restricts the ability of developers to build and deploy applications efficiently.",
    "rationale": "### Project Solution\n\nPyCardano is a Python library designed to facilitate interaction with the Cardano blockchain by enabling users to create and sign transactions without relying on third-party serialization tools. This independence makes PyCardano lightweight and easy to set up across various environments. ​\n\nDeveloping PyCardano addresses the challenges mentioned above by providing a native Python library tailored for the Cardano blockchain. This initiative aims to lower the entry barrier for Python developers, fostering a more inclusive and diverse developer community. By eliminating the need for third-party serialization tools, PyCardano simplifies the development workflow, enhancing both efficiency and reliability. This project not only broadens the accessibility of Cardano to a wider range of developers but also encourages innovation and the creation of new applications within the ecosystem.​\n\nBy implementing this proposal, we anticipate the following outcomes:\n\nSustained Compatibility: PyCardano will remain compatible with the latest Cardano protocol versions, enabling developers to build and maintain applications without disruption.​ Although there isn't a clearly specified roadmap or hardfork for Cardano in the next 12 months, we know it is likely that there will be Leios and Midnight integration. These integration and changes will more or less require corresponding updates in PyCardano.\n\n[https://iohk.io/en/research/library/papers/ouroboros-leios-design-goals-and-concepts/](https://iohk.io/en/research/library/papers/ouroboros-leios-design-goals-and-concepts/)\n\n[https://midnight.network/](https://midnight.network/)\n\nImproved Stability: Ongoing maintenance and prompt bug fixes will enhance the library's stability and reliability.​\n\nEnhanced Developer Experience: Up-to-date documentation and community support will provide a more accessible and user-friendly experience for developers.​\n\nCommunity Growth: Active engagement with the developer community will foster collaboration, innovation, and the broader adoption of PyCardano.\n\n### Vendor Profile\n\nJerry, the creator of PyCardano, will lead this project. His deep understanding of both the library and Cardano's ecosystem makes him uniquely qualified to oversee this upgrade.\n\nJerry's experience as a blockchain developer ensures that the technical challenges of aligning with the Chang hardfork can be effectively addressed.\n\nTrack Record:\n\nThe success of PyCardano, with over 170 dependent projects on GitHub and 7,000+ monthly downloads, demonstrates our team's ability to create and maintain critical infrastructure for the Cardano ecosystem.\n\nThe active Discord community (100+ members) shows our ongoing engagement with users and our ability to address their needs.\n\nTechnical Expertise:\n\nOur team's familiarity with Cardano's protocol, combined with expertise in Python development, positions us to efficiently implement the necessary upgrades.\n\nWe have a history of successfully adapting PyCardano to previous Cardano updates, showcasing our ability to respond to network changes.\n\n### Contract Management\n\nA written off-chain Legal Contract will be created between the Vendor and the Cardano Development Holdings (CDH), as mandated by the constitution, and will be administered by Intersect. This will include details of the project delivery schedule and dispute resolution.\n\n### Project Delivery \n\nAll milestones, acceptance criteria, payment amounts and expected delivery dates will be agreed between the Vendor and Intersect, acting on behalf of the CDH. The vendor will deliver according to the agreed-upon project schedule within the Legal Contract, of which the necessary information will be made public via the budget management platform via transaction metadata.\n\nDefined by the milestones within a Legal Contract, the vendor will submit and attest milestone acceptance to the community, Intersect or 3rd Party Assurer.\n\nProject progress will be monitored via Intersect's delivery assurance function which will be communicated to the community.\n\nAcceptance of the above work is expected to be supported by a 3rd Party Assurer, who will be responsible for reviewing and signing off the work completed at each project milestone against the corresponding milestone deliverables detailed within the Legal Contract. This work is funded from a portion of this treasury withdrawal.\n\n### Budget Management Tooling\n\nTo administrate treasury funds on-chain, Intersect will utilize the treasury management smart contract framework developed by Sundae Labs. The smart contracts have been [extensively tested](https://github.com/SundaeSwap-finance/treasury-contracts/tree/main/offchain/tests) including audits from TxPipe and MLabs. Examples of the usage of these contracts can be seen across mainnet described across Intersect authored [Blog 1](https://www.intersectmbo.org/news/smart-contract-mainnet-demo-a-step-toward-on-chain-treasury-withdrawals), [Blog 2](https://www.intersectmbo.org/news/smart-contract-mainnet-demo-day-two-update) and [Blog 3](https://www.intersectmbo.org/news/smart-contract-mainnet-demo-day-three-update).\n\nFinal mainnet validation test can be seen via the Disburse action within transaction: 0f591dc544ae14102dbb4a74d5311a6acffc1772b163d8b7a9656b9525950b17\n\nWith the confirmed treasury reserve contract address being: stake17xzc8pt7fgf0lc0x7eq6z7z6puhsxmzktna7dluahrj6g6ghh5qjr\n\n#### Specifics\n\nIntersect will utilize a single Treasury Reserve Smart Contract (TRSC), with many Project-Specific Smart Contracts (PSSC), managed by Intersect. Intersect's management consists of three 'admin' and two Intersect 'leadership' roles. An Oversight Committee consisting of five external, independent third-party entities will provide checks and balances on Intersect, and safeguard against errors and unilateral control. The administration of both TRSC and PSSCs will be managed by Intersect, with external oversight on certain actions from the Oversight Committee.\n\nThe Oversight Committee consists of Sundae Labs, Cardano Foundation, Dquadrant, Xerberus and NMKR. Their role is to independently verify key administrative actions using on-chain logic, ensuring accuracy and consistency without exercising discretion over governance decisions.\n\nFor all details on Intersect's configuration please see the **[Smart Contract Guide](https://docs.intersectmbo.org/cardano-facilitation-services/cardano-budget/intersect-administration-services/smart-contracts-as-part-of-our-administration)** on the knowledgebase.\n\nThe high level permissions are as follows:\n\n- TRSC Fund and PSSC Modify\n\n  - Two of the three Intersect admins, two of the five trusted entities and one of the two Intersect leadership sign-off must authorize\n\n- TRSC Disperse\n\n  - Two of three Intersect admins, three of five trusted entities and two of two Intersect leadership sign-off must authorize\n\n- TRSC Pause and Resume\n\n  - Two of three Intersect admins, and one of two Intersect leadership sign-off must authorize\n\n- TRSC Sweep\n\n  - One of three Intersect admins, and one of two Intersect leadership sign-off must authorize\n\n- TRSC Reorganize\n\n  - Two of three Intersect admins and three of five trusted entities must authorize\n\n#### Processes\n\nUpon enactment of this governance action, funding for this project will be directed into the TRSC's stake account. All instances of TRSC and PSSC can not be staked with a SPO and will be delegated to the auto-abstain predefined DRep. From here funds will be withdrawn into a UTxO remaining at the TRSC.\n\nWhen the Legal contract is prepared and the vendor is ready, funding for this project will be transferred using the Fund action to a PSSC. All milestones will be outlined within the metadata.\n\nA dashboard will be available for the community to audit the TRSC or PSSC and track metrics related to this withdrawn ada as well as being immutably verifiable on chain.\n\nThe subsections; Contract Management, Project Delivery, and Budget Management Tooling described above cover the constitutional requirements specified in Article IV section 4 and 5.",
    "references": [
      {
        "@type": "Other",
        "label": "PyCardano Project Github",
        "uri": "https://github.com/Python-Cardano/pycardano"
      },
      {
        "@type": "Other",
        "label": "170+ Github Projects Depending on PyCardano",
        "uri": "https://github.com/Python-Cardano/pycardano/network/dependents"
      },
      {
        "@type": "Other",
        "label": "9k+ monthly download",
        "uri": "https://pypistats.org/packages/pycardano"
      },
      {
        "@type": "Other",
        "label": "Project Proposal In Ekklesia",
        "uri": "https://2025budget.intersectmbo.org/ballots/680d1b63565577986442d123/proposals/680d1b63565577986442d184"
      },
      {
        "@type": "Other",
        "label": "Approved Budget Info Action submitted by Intersect via GovTool",
        "uri": "https://gov.tools/outcomes/governance_actions/e14de8d9dc4f4ddf3fe9250a8a926e20f10e99b86bd0610b77d7a054981591ee#0"
      },
      {
        "@type": "Other",
        "label": "Details of all successful proposals (CSV)",
        "uri": "ipfs://bafybeicwrop4q7xvnyjdd5drumbe56sqtm5lbe2ul3c262zt4hgguzdycm"
      },
      {
        "@type": "Other",
        "label": "Automating Accountability: Cardano's Smart Contract Framework Blog",
        "uri": "ipfs://bafybeihqx4ae72z7suqfnxrpqpqithp43cai7o2uuewnqtezgaoyc3ptyq"
      },
      {
        "@type": "Other",
        "label": "Sundae Labs Budget Management Smart Contracts Github Repository",
        "uri": "https://github.com/SundaeSwap-finance/treasury-contracts"
      },
      {
        "@type": "Other",
        "label": "Budget Management Smart Contracts TxPipe Audit Report",
        "uri": "ipfs://bafybeiccnwejbgj43wo6hrlseckkkmprtoqc5cfuy2hesm6c6yealwho3e"
      },
      {
        "@type": "Other",
        "label": "Budget Management Smart Contracts MLabs Audit Report",
        "uri": "ipfs://bafybeiah5fnjhda5hemj3qvaehc4mre3qllqzw2l7mkdsguytn4ftgafw4"
      }
    ],
    "onChain": {
      "governanceActionType": "treasuryWithdrawals",
      "depositReturnAddress": "stake1uyvjdz9rxsfsmv44rtk75k2rqyqskrga96dgdfrqjvjjpwsefcjnp",
      "withdrawals": [
        {
          "withdrawalAddress": "stake17xzc8pt7fgf0lc0x7eq6z7z6puhsxmzktna7dluahrj6g6ghh5qjr",
          "withdrawalAmount": 314800000000
        }
      ]
    }
  }
}
